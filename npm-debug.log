0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/nodejs', '/usr/bin/npm', 'install', '-g', 'postgres' ]
2 info using npm@3.5.2
3 info using node@v4.2.6
4 silly loadCurrentTree Starting
5 silly install loadCurrentTree
6 silly install readGlobalPackageData
7 silly fetchPackageMetaData postgres
8 silly fetchNamedPackageData postgres
9 silly mapToRegistry name postgres
10 silly mapToRegistry using default registry
11 silly mapToRegistry registry https://registry.npmjs.org/
12 silly mapToRegistry uri https://registry.npmjs.org/postgres
13 verbose request uri https://registry.npmjs.org/postgres
14 verbose request no auth needed
15 info attempt registry request try #1 at 3:11:53 PM
16 verbose request id 5973c94a9501252b
17 http request GET https://registry.npmjs.org/postgres
18 http 200 https://registry.npmjs.org/postgres
19 verbose headers { date: 'Mon, 03 Sep 2018 13:11:55 GMT',
19 verbose headers   'content-type': 'application/json; charset=UTF-8',
19 verbose headers   'transfer-encoding': 'chunked',
19 verbose headers   connection: 'keep-alive',
19 verbose headers   'set-cookie': [ '__cfduid=d5d86fa92613111517d3714c6df516bf91535980314; expires=Tue, 03-Sep-19 13:11:54 GMT; path=/; domain=.registry.npmjs.org; HttpOnly' ],
19 verbose headers   'cf-cache-status': 'MISS',
19 verbose headers   'cache-control': 'max-age=300',
19 verbose headers   'cf-ray': '454877032a76ac36-JNB',
19 verbose headers   etag: 'W/"307fd4931c9df069cdfbd40b5b37fcf6"',
19 verbose headers   'expect-ct': 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"',
19 verbose headers   'last-modified': 'Sun, 27 May 2018 12:39:49 GMT',
19 verbose headers   vary: 'accept-encoding, accept',
19 verbose headers   server: 'cloudflare',
19 verbose headers   'content-encoding': 'gzip' }
20 silly get cb [ 200,
20 silly get   { date: 'Mon, 03 Sep 2018 13:11:55 GMT',
20 silly get     'content-type': 'application/json; charset=UTF-8',
20 silly get     'transfer-encoding': 'chunked',
20 silly get     connection: 'keep-alive',
20 silly get     'set-cookie': [ '__cfduid=d5d86fa92613111517d3714c6df516bf91535980314; expires=Tue, 03-Sep-19 13:11:54 GMT; path=/; domain=.registry.npmjs.org; HttpOnly' ],
20 silly get     'cf-cache-status': 'MISS',
20 silly get     'cache-control': 'max-age=300',
20 silly get     'cf-ray': '454877032a76ac36-JNB',
20 silly get     etag: 'W/"307fd4931c9df069cdfbd40b5b37fcf6"',
20 silly get     'expect-ct': 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"',
20 silly get     'last-modified': 'Sun, 27 May 2018 12:39:49 GMT',
20 silly get     vary: 'accept-encoding, accept',
20 silly get     server: 'cloudflare',
20 silly get     'content-encoding': 'gzip' } ]
21 verbose get saving postgres to /home/lppzaz/.npm/registry.npmjs.org/postgres/.cache.json
22 silly install normalizeTree
23 silly loadCurrentTree Finishing
24 silly loadIdealTree Starting
25 silly install loadIdealTree
26 silly cloneCurrentTree Starting
27 silly install cloneCurrentTreeToIdealTree
28 silly cloneCurrentTree Finishing
29 silly loadShrinkwrap Starting
30 silly install loadShrinkwrap
31 silly loadShrinkwrap Finishing
32 silly loadAllDepsIntoIdealTree Starting
33 silly install loadAllDepsIntoIdealTree
34 silly resolveWithNewModule postgres@0.0.1 checking installable status
35 silly cache add args [ 'postgres', null ]
36 verbose cache add spec postgres
37 silly cache add parsed spec Result {
37 silly cache add   raw: 'postgres',
37 silly cache add   scope: null,
37 silly cache add   name: 'postgres',
37 silly cache add   rawSpec: '',
37 silly cache add   spec: 'latest',
37 silly cache add   type: 'tag' }
38 silly addNamed postgres@latest
39 verbose addNamed "latest" is being treated as a dist-tag for postgres
40 info addNameTag [ 'postgres', 'latest' ]
41 silly mapToRegistry name postgres
42 silly mapToRegistry using default registry
43 silly mapToRegistry registry https://registry.npmjs.org/
44 silly mapToRegistry uri https://registry.npmjs.org/postgres
45 verbose addNameTag registry:https://registry.npmjs.org/postgres not in flight; fetching
46 verbose get https://registry.npmjs.org/postgres not expired, no request
47 silly addNameTag next cb for postgres with tag latest
48 silly addNamed postgres@0.0.1
49 verbose addNamed "0.0.1" is a plain semver version for postgres
50 silly mapToRegistry name postgres
51 silly mapToRegistry using default registry
52 silly mapToRegistry registry https://registry.npmjs.org/
53 silly mapToRegistry uri https://registry.npmjs.org/postgres
54 verbose addRemoteTarball https://registry.npmjs.org/postgres/-/postgres-0.0.1.tgz not in flight; adding
55 verbose addRemoteTarball [ 'https://registry.npmjs.org/postgres/-/postgres-0.0.1.tgz',
55 verbose addRemoteTarball   '93aecd0a7fcf620792bcc2c87a2ead432adaa833' ]
56 info retry fetch attempt 1 at 3:11:55 PM
57 info attempt registry request try #1 at 3:11:55 PM
58 http fetch GET https://registry.npmjs.org/postgres/-/postgres-0.0.1.tgz
59 http fetch 200 https://registry.npmjs.org/postgres/-/postgres-0.0.1.tgz
60 silly fetchAndShaCheck shasum 93aecd0a7fcf620792bcc2c87a2ead432adaa833
61 verbose addTmpTarball /tmp/npm-17123-39dcbc2e/registry.npmjs.org/postgres/-/postgres-0.0.1.tgz not in flight; adding
62 verbose addTmpTarball already have metadata; skipping unpack for postgres@0.0.1
63 silly cache afterAdd postgres@0.0.1
64 verbose afterAdd /home/lppzaz/.npm/postgres/0.0.1/package/package.json not in flight; writing
65 verbose afterAdd /home/lppzaz/.npm/postgres/0.0.1/package/package.json written
66 silly loadAllDepsIntoIdealTree Finishing
67 silly idealTree:prePrune lib
67 silly idealTree:prePrune └── postgres@0.0.1
68 silly loadIdealTree Finishing
69 silly currentTree lib
70 silly idealTree lib
70 silly idealTree └── postgres@0.0.1
71 silly generateActionsToTake Starting
72 silly install generateActionsToTake
73 silly generateActionsToTake Finishing
74 silly diffTrees action count 1
75 silly diffTrees add postgres@0.0.1
76 silly decomposeActions action count 8
77 silly decomposeActions fetch postgres@0.0.1
78 silly decomposeActions extract postgres@0.0.1
79 silly decomposeActions test postgres@0.0.1
80 silly decomposeActions preinstall postgres@0.0.1
81 silly decomposeActions build postgres@0.0.1
82 silly decomposeActions install postgres@0.0.1
83 silly decomposeActions postinstall postgres@0.0.1
84 silly decomposeActions finalize postgres@0.0.1
85 silly executeActions Starting
86 silly install executeActions
87 silly doSerial global-install 0
88 silly doParallel fetch 1
89 verbose lock using /home/lppzaz/.npm/_locks/staging-3a08f0df5026584d.lock for /usr/local/lib/node_modules/.staging
90 silly doParallel extract 1
91 silly extract postgres@0.0.1
92 verbose unbuild lib/node_modules/.staging/postgres-f8e30b12
93 silly gentlyRm /usr/local/lib/node_modules/.staging/postgres-f8e30b12 is being purged from base /usr/local
94 verbose gentlyRm don't care about contents; nuking /usr/local/lib/node_modules/.staging/postgres-f8e30b12
95 verbose tar unpack /home/lppzaz/.npm/postgres/0.0.1/package.tgz
96 verbose tar unpacking to /usr/local/lib/node_modules/.staging/postgres-f8e30b12
97 silly gentlyRm /usr/local/lib/node_modules/.staging/postgres-f8e30b12 is being purged
98 verbose gentlyRm don't care about contents; nuking /usr/local/lib/node_modules/.staging/postgres-f8e30b12
99 silly gunzTarPerm modes [ '755', '644' ]
100 silly gunzTarPerm extractEntry
101 silly gunzTarPerm extractEntry .gitignore
102 silly gunzTarPerm extractEntry ._.npmignore
103 silly gunzTarPerm extractEntry .npmignore
104 silly gunzTarPerm extractEntry binding.cc
105 silly gunzTarPerm extractEntry LICENSE-MIT
106 silly gunzTarPerm extractEntry ._package.json
107 silly gunzTarPerm extractEntry package.json
108 silly gunzTarPerm extractEntry postgres.js
109 silly gunzTarPerm extractEntry README
110 silly gunzTarPerm extractEntry test.js
111 silly gunzTarPerm extractEntry type-oids.h
112 silly gunzTarPerm extractEntry wscript
113 silly gentlyRm /usr/local/lib/node_modules/.staging/postgres-f8e30b12/node_modules is being purged
114 verbose gentlyRm don't care about contents; nuking /usr/local/lib/node_modules/.staging/postgres-f8e30b12/node_modules
115 silly doParallel preinstall 1
116 silly preinstall postgres@0.0.1 /usr/local/lib/node_modules/.staging/postgres-f8e30b12
117 info lifecycle postgres@0.0.1~preinstall: postgres@0.0.1
118 silly lifecycle postgres@0.0.1~preinstall: no script for preinstall, continuing
119 silly doReverseSerial remove 0
120 silly doSerial move 0
121 silly doSerial finalize 1
122 silly finalize /usr/local/lib/node_modules/postgres
123 silly doSerial build 1
124 silly build postgres@0.0.1
125 info linkStuff postgres@0.0.1
126 silly linkStuff postgres@0.0.1 has /usr/local/lib/node_modules as its parent node_modules
127 silly linkStuff postgres@0.0.1 is part of a global install
128 silly linkStuff postgres@0.0.1 is installed into a global node_modules
129 silly linkStuff postgres@0.0.1 is installed into the top-level global node_modules
130 verbose linkBins postgres@0.0.1
131 verbose linkMans postgres@0.0.1
132 silly doSerial global-link 0
133 silly doParallel update-linked 0
134 silly doSerial install 1
135 silly install postgres@0.0.1 /usr/local/lib/node_modules/.staging/postgres-f8e30b12
136 info lifecycle postgres@0.0.1~install: postgres@0.0.1
137 verbose lifecycle postgres@0.0.1~install: unsafe-perm in lifecycle false
138 verbose lifecycle postgres@0.0.1~install: PATH: /usr/share/npm/bin/node-gyp-bin:/usr/local/lib/node_modules/postgres/node_modules/.bin:/usr/local/lib/node_modules/.bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin
139 verbose lifecycle postgres@0.0.1~install: CWD: /usr/local/lib/node_modules/postgres
140 silly lifecycle postgres@0.0.1~install: Args: [ '-c', 'node-waf configure build' ]
141 info lifecycle postgres@0.0.1~install: Failed to exec install script
142 verbose unlock done using /home/lppzaz/.npm/_locks/staging-3a08f0df5026584d.lock for /usr/local/lib/node_modules/.staging
143 silly rollbackFailedOptional Starting
144 silly rollbackFailedOptional Finishing
145 silly runTopLevelLifecycles Starting
146 silly runTopLevelLifecycles Finishing
147 silly install printInstalled
148 verbose stack Error: postgres@0.0.1 install: `node-waf configure build`
148 verbose stack spawn ENOENT
148 verbose stack     at ChildProcess.<anonymous> (/usr/share/npm/lib/utils/spawn.js:17:16)
148 verbose stack     at emitTwo (events.js:87:13)
148 verbose stack     at ChildProcess.emit (events.js:172:7)
148 verbose stack     at maybeClose (internal/child_process.js:821:16)
148 verbose stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:211:5)
149 verbose pkgid postgres@0.0.1
150 verbose cwd /home/lppzaz/Desktop/GWhandlebars
151 error Linux 4.15.0-33-generic
152 error argv "/usr/bin/nodejs" "/usr/bin/npm" "install" "-g" "postgres"
153 error node v4.2.6
154 error npm  v3.5.2
155 error file sh
156 error code ELIFECYCLE
157 error errno ENOENT
158 error syscall spawn
159 error postgres@0.0.1 install: `node-waf configure build`
159 error spawn ENOENT
160 error Failed at the postgres@0.0.1 install script 'node-waf configure build'.
160 error Make sure you have the latest version of node.js and npm installed.
160 error If you do, this is most likely a problem with the postgres package,
160 error not with npm itself.
160 error Tell the author that this fails on your system:
160 error     node-waf configure build
160 error You can get information on how to open an issue for this project with:
160 error     npm bugs postgres
160 error Or if that isn't available, you can get their info via:
160 error     npm owner ls postgres
160 error There is likely additional logging output above.
161 verbose exit [ 1, true ]
